<?php

declare(strict_types=1);

namespace {{ namespace }};

use Illuminate\Auth\Access\HandlesAuthorization;
use {{ namespacedUserModel }};
use {{ namespacedModel }};

class {{ class }}
{
    use HandlesAuthorization;

    /**
     * Determine whether the user can view any {{ docPluralModel }}
     * @param {{ user }} $user
     * @return mixed
     */
    public function viewAny({{ user }} $user)
    {
    }

    /**
     * Determine whether the user can view the {{ docModel }}
     * @param {{ user }} $user
     * @param {{ model }} ${{ modelVariable }}
     * @return mixed
     */
    public function view({{ user }} $user, {{ model }} ${{ modelVariable }})
    {
    }

    /**
     * Determine whether the user can create {{ docPluralModel }}
     * @param {{ user }} $user
     * @return mixed
     */
    public function create({{ user }} $user)
    {
    }

    /**
     * Determine whether the user can update the {{ docModel }}
     * @param {{ user }} $user
     * @param {{ model }} ${{ modelVariable }}
     * @return mixed
     */
    public function update({{ user }} $user, {{ model }} ${{ modelVariable }})
    {
    }

    /**
     * Determine whether the user can delete the {{ docModel }}
     * @param {{ user }} $user
     * @param {{ model }} ${{ modelVariable }}
     * @return mixed
     */
    public function delete({{ user }} $user, {{ model }} ${{ modelVariable }})
    {
    }

    /**
     * Determine whether the user can restore the {{ docModel }}
     * @param {{ user }} $user
     * @param {{ model }} ${{ modelVariable }}
     * @return mixed
     */
    public function restore({{ user }} $user, {{ model }} ${{ modelVariable }})
    {
    }

    /**
     * Determine whether the user can permanently delete the {{ docModel }}
     * @param {{ user }} $user
     * @param {{ model }} ${{ modelVariable }}
     * @return mixed
     */
    public function forceDelete({{ user }} $user, {{ model }} ${{ modelVariable }})
    {
    }
}
